[package]
name = "multiworld"
version.workspace = true
authors.workspace = true
edition.workspace = true
repository.workspace = true

[lints]
workspace = true

[dependencies]
async-proto = { version = "0.24", features = ["chrono", "semver"] }
async-trait = "0.1"
bitflags = "2"
chrono = { version = "0.4", default-features = false, features = ["clock", "std"] }
clap = { version = "4", features = ["derive"] }
derivative = "2"
enum-iterator = "2"
futures = "0.3"
github-app-auth = { git = "https://github.com/fenhl/github-app-auth", branch = "deps", optional = true }
if_chain = "1"
itertools = "0.14"
log-lock = { git = "https://github.com/fenhl/log-lock", branch = "main" }
multiworld-derive = { path = "../multiworld-derive" }
oauth2 = "4"
ootr = { git = "https://github.com/fenhl/oottracker", branch = "mw" }
ootr-utils = { git = "https://github.com/midoshouse/rust-ootr-utils", branch = "main" }
oottracker = { git = "https://github.com/fenhl/oottracker", branch = "mw" }
rand = "0.8.5"
rand_xoshiro = "0.6.0"
reqwest = { version = "0.12", default-features = false, features = ["blocking", "json"] }
ring = "0.17"
rocket_ws = "0.1"
semver = "1"
serde = { version = "1", features = ["derive"] }
serde_json = { package = "serde_json_path_to_error", version = "0.1" }
sqlx = { version = "0.8", default-features = false, features = ["macros", "postgres"], optional = true }
thiserror = "2"
tokio = { version = "1", features = ["net", "parking_lot", "process", "sync", "time"] }
tokio-tungstenite = { version = "0.21", features = ["rustls-tls-webpki-roots"] } # waiting for https://github.com/rwf2/Rocket/pull/2823
url = { version = "2", features = ["serde"] }
wheel = { git = "https://github.com/fenhl/wheel", branch = "main", features = ["async-proto", "chrono", "reqwest", "serde", "serde_json", "serde_json_path_to_error", "tungstenite021"] } # tungstenite feature required to correctly classify network errors

[target.'cfg(unix)'.dependencies]
xdg = "2"

[target.'cfg(windows)'.dependencies]
directories = "6"
